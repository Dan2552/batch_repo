#!/usr/bin/env ruby

require "batch_repo"

module BatchRepo
  class FileRollback < StandardError; end
  class BundlerCLI < Thor
    desc "update [gem] [version]", "Update gems"
    def update(gem = "*", version = "*")
      File.transaction(Dir.pwd) do |directory|
        all_the_gemfiles = Dir.glob(File.join(directory, "**", "Gemfile"))
        BatchRepo::Bundler.new(all_the_gemfiles).update(gem, version)
        raise FileRollback
      end
    rescue FileRollback
    end
  end

  class MainCLI < Thor
    include Thor::Actions

    desc "bundle [option]", "Manage many Gemfile at once"
    subcommand "bundle", BundlerCLI

    desc "clone all [github organisation]", "Clone all the GitHub repositories in an organisation"
    def clone_all(organisation)

    end

    def find_and_replace(original, replacement, file_matcher = "**/*")
      File.transaction(Dir.pwd) do |directory|
        files = Dir.glob(File.join(directory, file_matcher)
        find_and_replace = BatchRepo::FindAndReplace.new(files)
        find_and_replace.replace(original, replacement)
        find_and_replace.open_pull_requests!(dry_run: true)
        raise FileRollback
      end
    rescue FileRollback
    end
  end
end

BatchRepo::MainCLI.start(ARGV)
